@use 'sass:map';
@use '@angular/material' as mat;
@use 'variables' as vars;
@use 'palettes' as p;
@use 'mixins' as m;
@use 'sass:color';

html,
body {
    color-scheme: light;
    height: 100%;
    margin: 0;

    @include mat.theme(
        (
            color: (
                theme-type: light,
                primary: p.$primary-palette,
                tertiary: p.$tertiary-palette
            ),
            typography: (
                use-system-variables: true,
                system-variables-prefix: mat-sys,
                plain-family: Roboto,
                brand-family: Alegreya,
                bold-weight: 700,
                medium-weight: 500,
                regular-weight: 300
            ),
            density: 0
        )
    );

    &.dark {
        color-scheme: dark;

        .meta {
            color: var(--mat-sys-tertiary-95);
        }

        @include mat.theme(
            (
                color: (
                    theme-type: dark,
                    primary: p.$primary-palette,
                    tertiary: p.$tertiary-palette
                )
            )
        );
    }

    @include mat.theme-overrides(
        (
            body-large: 300 1.4rem / 2.2rem Roboto,
            body-medium: 300 1.2rem / 2.1rem Roboto,
            body-small: 300 1rem / 1.7rem Roboto,
            title-large: 2.2rem,
            title-large-weight: 700,
            title-medium: 1.25rem,
            title-medium-weight: 500,
            title-small: 1rem,
            title-small-weight: 500,
            subtitle-text-line-height: 0.5
        )
    );
    @include m.my-typography-hierarchy;
    @include mat.card-overrides(
        (
            title-text-size: var(--mat-sys-title-large),
            title-text-line-height: 1.8,
            title-text-weight: var(--mat-sys-title-large-weight),
            subtitle-text-color: var(--mat-sys-secondary),
            subtitle-text-size: var(--mat-sys-title-medium),
            subtitle-text-line-height: 1.5,
            subtitle-text-font: Roboto,
            subtitle-text-weight: 400
        )
    );
    @include mat.list-overrides(
        (
            list-item-container-color: var(--mat-sys-primary),
            list-item-one-line-container-height: 65px
        )
    );

    .mobile-menu {
        @include mat.list-overrides(
            (
                list-item-hover-label-text-color: var(--mat-sys-inverse-on-surface),
                list-item-label-text-color: var(--mat-sys-inverse-on-surface)
            )
        );
    }

    .search-field-mobile {
        @include mat.list-overrides(
            (
                list-item-one-line-container-height: 110px
            )
        );
    }

    @include mat.toolbar-overrides(
        (
            standard-height: vars.$header-standard-height,
            mobile-height: vars.$header-mobile-height
        )
    );
    @include mat.form-field-overrides(
        (
            filled-container-color: transparent
        )
    );

    .introduction {
        @include mat.toolbar-overrides(
            (
                container-background-color: blue
            )
        );
    }

    @include mat.divider-overrides(
        (
            color: var(--mat-sys-tertiary)
        )
    );
}

.info {
    @include mat.theme(
        (
            color: (
                primary: p.$info-palette
            )
        )
    );
    @include mat.button-overrides(
        (
            filled-container-color: var(--mat-sys-primary),
            filled-label-text-color: var(--mat-sys-on-primary),
            outlined-outline-color: var(--mat-sys-primary),
            outlined-label-text-color: var(--mat-sys-primary-on),
            protected-container-color: var(--mat-sys-primary-container),
            protected-label-text-color: var(--mat-sys-primary-on-container)
        )
    );
    @include mat.fab-overrides(
        (
            container-color: p.get-palette-colors(p.$info-palette, 70),
            foreground-color: p.get-palette-colors(p.$info-palette, 100)
        )
    );
    @include mat.icon-overrides(
        (
            color: p.get-palette-colors(p.$info-palette, 70)
        )
    );
    @include mat.form-field-overrides(
        (
            filled-container-color: initial
        )
    );
}

.success {
    @include mat.theme(
        (
            color: (
                primary: p.$success-palette
            )
        )
    );
    @include mat.button-overrides(
        (
            filled-container-color: var(--mat-sys-primary),
            filled-label-text-color: var(--mat-sys-on-primary),
            outlined-outline-color: var(--mat-sys-primary),
            outlined-label-text-color: var(--mat-sys-primary-on),
            protected-container-color: var(--mat-sys-primary-container),
            protected-label-text-color: var(--mat-sys-primary-on-container)
        )
    );
    @include mat.fab-overrides(
        (
            container-color: p.get-palette-colors(p.$success-palette, 70),
            foreground-color: p.get-palette-colors(p.$success-palette, 100)
        )
    );
    @include mat.icon-overrides(
        (
            color: p.get-palette-colors(p.$success-palette, 70) // color: var(--mat-sys-primary)
        )
    );
}

.warning {
    @include mat.theme(
        (
            color: (
                primary: p.$warning-palette
            )
        )
    );
    @include mat.button-overrides(
        (
            filled-container-color: var(--mat-sys-primary),
            filled-label-text-color: var(--mat-sys-on-primary),
            outlined-outline-color: var(--mat-sys-primary),
            outlined-label-text-color: var(--mat-sys-primary-on),
            protected-container-color: var(--mat-sys-primary-container),
            protected-label-text-color: var(--mat-sys-primary-on-container)
        )
    );
    @include mat.fab-overrides(
        (
            container-color: p.get-palette-colors(p.$warning-palette, 70),
            foreground-color: p.get-palette-colors(p.$warning-palette, 100)
        )
    );
    @include mat.icon-overrides(
        (
            color: p.get-palette-colors(p.$warning-palette, 70)
        )
    );
}

.error {
    @include mat.theme(
        (
            color: (
                primary: p.$error-palette
            )
        )
    );
    @include mat.button-overrides(
        (
            filled-container-color: var(--mat-sys-primary),
            filled-label-text-color: var(--mat-sys-on-primary),
            outlined-outline-color: var(--mat-sys-primary),
            outlined-label-text-color: var(--mat-sys-primary-on),
            protected-container-color: var(--mat-sys-primary-container),
            protected-label-text-color: var(--mat-sys-primary-on-container)
        )
    );
    @include mat.fab-overrides(
        (
            container-color: p.get-palette-colors(p.$error-palette, 60),
            foreground-color: p.get-palette-colors(p.$error-palette, 100)
        )
    );
    @include mat.icon-overrides(
        (
            color: p.get-palette-colors(p.$error-palette, 70)
        )
    );
}
